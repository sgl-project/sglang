[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sglang"
version = "0.5.3.post3"
description = "SGLang is a fast serving framework for large language models and vision language models."
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: Apache Software License",
]
dependencies = [
  "IPython",
  "aiohttp",
  "anthropic>=0.20.0",
  "blobfile==3.0.0",
  "build",
  "compressed-tensors",
  "cuda-python",
  "datasets",
  "einops",
  "fastapi",
  "flashinfer_python==0.4.0",
  "hf_transfer",
  "huggingface_hub",
  "interegular",
  "llguidance>=0.7.11,<0.8.0",
  "modelscope",
  "msgspec",
  "ninja",
  "numpy",
  "nvidia-cutlass-dsl==4.2.1",
  "openai-harmony==0.0.4",
  "openai==1.99.1",
  "orjson",
  "outlines==0.1.11",
  "packaging",
  "partial_json_parser",
  "pillow",
  "prometheus-client>=0.20.0",
  "psutil",
  "py-spy",
  "pybase64",
  "pydantic",
  "nvidia-ml-py",
  "python-multipart",
  "pyzmq>=25.1.2",
  "requests",
  "scipy",
  "sentencepiece",
  "setproctitle",
  "sgl-kernel==0.3.15",
  "soundfile==0.13.1",
  "tiktoken",
  "timm==1.0.16",
  "torch==2.8.0",
  "torch_memory_saver==0.0.9rc2",
  "torchao==0.9.0",
  "torchaudio==2.8.0",
  "torchvision",
  "tqdm",
  "transformers==4.57.1",
  "uvicorn",
  "uvloop",
  "xgrammar==0.1.25",
  "grpcio==1.75.1", # keep it align with compile_proto.py
  "grpcio-tools==1.75.1", # keep it align with compile_proto.py
  "grpcio-reflection==1.75.1", # required by srt/entrypoints/grpc_server.py
]

[project.optional-dependencies]
decord = ["decord2"]
test = [
  "accelerate",
  "expecttest",
  "gguf",
  "jsonlines",
  "matplotlib",
  "pandas",
  "peft",
  "pytest",
  "sentence_transformers",
  "tabulate",
]
tracing = [
  "opentelemetry-api",
  "opentelemetry-exporter-otlp",
  "opentelemetry-exporter-otlp-proto-grpc",
  "opentelemetry-sdk",
]
all = ["sglang[test]", "sglang[decord]"]
cu130 = [
  "torch==2.9.0",
  "torchaudio==2.9.0",
  "torchvision==0.24.0",
]
cu130_all = [
  "sglang[test]",
  "sglang[decord]",
  "sglang[cu130]"
]


# The following will be deprecated in 2 weeks
dev = ["sglang[test]", "sglang[decord]"]
all_aarch64 = ["sglang[test]"]
blackwell = ["sglang[test]", "sglang[decord]"]
blackwell_aarch64 = ["sglang[test]"]


[project.urls]
"Homepage" = "https://github.com/sgl-project/sglang"
"Bug Tracker" = "https://github.com/sgl-project/sglang/issues"

[tool.setuptools.package-data]
"sglang" = [
  "srt/layers/moe/fused_moe_triton/configs/*/*.json",
  "srt/layers/quantization/configs/*.json",
  "srt/mem_cache/storage/hf3fs/hf3fs_utils.cpp",
  "srt/speculative/cpp_ngram/*.cpp",
  "srt/speculative/cpp_ngram/*.h",
]

[tool.setuptools.packages.find]
exclude = [
  "assets*",
  "benchmark*",
  "docs*",
  "dist*",
  "playground*",
  "scripts*",
  "tests*",
]

[tool.wheel]
exclude = [
  "assets*",
  "benchmark*",
  "docs*",
  "dist*",
  "playground*",
  "scripts*",
  "tests*",
]

[tool.codespell]
ignore-words-list = "ans, als, hel, boostrap, childs, te, vas, hsa, ment"
skip = "*.json,*.jsonl,*.patch,*.txt"
