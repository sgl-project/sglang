[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sglang"
version = "0.5.4.post2"
description = "SGLang is a fast serving framework for large language models and vision language models."
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
]

dependencies = [
    "IPython",
    "aiohttp",
    "anthropic>=0.20.0",
    "blobfile==3.0.0",
    "build",
    "compressed-tensors",
    "cuda-python",
    "decord2",
    "datasets",
    "einops",
    "fastapi",
    "flashinfer_python==0.4.1",
    "gguf",
    "hf_transfer",
    "huggingface_hub",
    "interegular",
    "llguidance>=0.7.11,<0.8.0",
    "modelscope",
    "msgspec",
    "ninja",
    "numpy",
    "nvidia-cutlass-dsl==4.2.1",
    "openai-harmony==0.0.4",
    "openai==2.6.1",
    "orjson",
    "outlines==0.1.11",
    "packaging",
    "partial_json_parser",
    "pillow",
    "prometheus-client>=0.20.0",
    "psutil",
    "py-spy",
    "pybase64",
    "pydantic",
    "nvidia-ml-py",
    "python-multipart",
    "pyzmq>=25.1.2",
    "requests",
    "scipy",
    "sentencepiece",
    "setproctitle",
    "sgl-kernel==0.3.16.post4",
    "soundfile==0.13.1",
    "tiktoken",
    "timm==1.0.16",
    "torch_memory_saver==0.0.9",
    "torch==2.8.0",
    "torchaudio==2.8.0",
    "torchvision","torchao==0.9.0",
    "tqdm",
    "transformers==4.57.1",
    "uvicorn",
    "uvloop",
    "xgrammar==0.1.25",
    "grpcio==1.75.1", # keep it align with compile_proto.py
    "grpcio-tools==1.75.1", # keep it align with compile_proto.py
    "grpcio-reflection==1.75.1", # required by srt/entrypoints/grpc_server.py
    "grpcio-health-checking==1.75.1", # required for Kubernetes gRPC health probes
]

[project.optional-dependencies]
checkpoint-engine = ["checkpoint-engine==0.1.2"]
diffusion = [
    "diffusers==0.35.2",
    "yunchang==0.6.3.post1",
    "opencv-python==4.10.0.84",
    "imageio==2.36.0",
    "imageio-ffmpeg==0.5.1",
    "PyYAML==6.0.1",
    "moviepy>=2.0.0",
    "cloudpickle",
    "remote-pdb",
    "torchcodec==0.5.0",
    "openai==2.6.1",
    # required by vsa
    "pytest",
    "st_attn ==0.0.6",
    "vsa==0.0.3",
]

[tool.uv.extra-build-dependencies]
st-attn = ["torch", "setuptools"]
st_attn = ["torch", "setuptools"]
vsa = ["torch", "setuptools"]
test = [
    "accelerate",
    "expecttest",
    "jsonlines",
    "matplotlib",
    "pandas",
    "peft",
    "pytest",
    "sentence_transformers",
    "tabulate",
    "av==14.3.0",
    "pytorch-msssim==1.0.0",
]
dev = ["sglang[test]"]
tracing = [
    "opentelemetry-api",
    "opentelemetry-exporter-otlp",
    "opentelemetry-exporter-otlp-proto-grpc",
    "opentelemetry-sdk",
]

[project.urls]
"Homepage" = "https://github.com/sgl-project/sglang"
"Bug Tracker" = "https://github.com/sgl-project/sglang/issues"

[project.scripts]
sglang = "sglang.cli.main:main"

[tool.setuptools.package-data]
"sglang" = [
    "srt/layers/moe/fused_moe_triton/configs/*/*.json",
    "srt/layers/quantization/configs/*.json",
    "srt/mem_cache/storage/hf3fs/hf3fs_utils.cpp",
    "srt/speculative/cpp_ngram/*.cpp",
    "srt/speculative/cpp_ngram/*.h",
]

[tool.setuptools.packages.find]
exclude = [
    "assets*",
    "benchmark*",
    "docs*",
    "dist*",
    "playground*",
    "scripts*",
    "tests*",
]

[tool.wheel]
exclude = [
    "assets*",
    "benchmark*",
    "docs*",
    "dist*",
    "playground*",
    "scripts*",
    "tests*",
]

[tool.codespell]
ignore-words-list = "ans, als, hel, boostrap, childs, te, vas, hsa, ment"
skip = "*.json,*.jsonl,*.patch,*.txt"
