[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "sgl-diffusion"
version = "0.0.1"
description = "sgl-diffusion"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
]

dependencies = [
    # Core Libraries
    "scipy==1.14.1", "requests>=2.32.2",
    # Machine Learning & Transformers
    "transformers>=4.46.1", "sentencepiece==0.2.0",
    "diffusers==0.35.2",
    "torch==2.8.0", "torchvision",
    # Acceleration & Optimization
    "accelerate==1.0.1", "yunchang",
    # Computer Vision & Image Processing
    "opencv-python==4.10.0.84", "pillow>=10.3.0", "imageio==2.36.0",
    "imageio-ffmpeg==0.5.1", "einops",
    # Experiment Tracking & Logging
    "wandb>=0.21.0", "loguru",
    # Miscellaneous Utilities
    "tqdm", "pytest", "PyYAML==6.0.1",
    "gradio==5.41.0", "moviepy>=2.0.0", "flask",
    "flask_restful", "aiohttp", "huggingface_hub", "cloudpickle",
    # System & Monitoring Tools
    "remote-pdb",
    # Preprocessing Dependencies
    "torchcodec==0.5.0",
    "pyzmq>=25.1.2", "setproctitle",
    # Kernels
    "sgl-kernel==0.3.16",
]

[tool.uv]
prerelease = "allow"

[tool.uv.sources]
torch = [
    { index = "pytorch-cpu", marker = "sys_platform != 'linux'" },
    { index = "pytorch-cu128", marker = "sys_platform == 'linux'" },
]
torchvision = [
    { index = "pytorch-cpu", marker = "sys_platform != 'linux'" },
    { index = "pytorch-cu128", marker = "sys_platform == 'linux'" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[project.optional-dependencies]
lint = [
    "pre-commit==4.0.1",
]

test = [
    "av==14.3.0",
    "pytorch-msssim==1.0.0",
    "pytest",
    "openai",
]


kernels = ["vsa"]
h100 = ["st_attn", "vsa"]

dev = ["sgl-diffusion[lint]", "sgl-diffusion[test]", ]

[project.scripts]
# cli
sgl-diffusion = "sgl_diffusion.runtime.entrypoints.cli.main:main"

[tool.setuptools.packages.find]
exclude = ["assets*", "docker*", "docs", "scripts*"]

[tool.wheel]
exclude = ["assets*", "docker*", "docs", "scripts*"]

[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
disallow_untyped_calls = true
check_untyped_defs = true
follow_imports = "silent"

[tool.codespell]
skip = "./data,./wandb,./csrc/attn/sliding_tile_attention/tk"

[tool.ruff]
# Allow lines to be as long as 80.
line-length = 80

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    # "I",
    "G",
]
ignore = [
    # star imports
    "F405", "F403",
    # lambda expression assignment
    "E731",
    # Loop control variable not used within loop body
    "B007",
    # f-string format
    "UP032",
    # line too long
    "E501",
]

[tool.ruff.lint.per-file-ignores]
"sgl-diffusion/models/stepvideo/diffusion/video_pipeline.py" = ["F821"]
"csrc/attn/sliding_tile_attention/test/bench.py" = ["F841"]
"sgl-diffusion/models/stepvideo/__init__.py" = ["F403"]
"sgl-diffusion/models/stepvideo/utils/__init__.py" = ["F403"]
# Ignore all files that end in `_test.py`.
"sgl-diffusion/models/hunyuan/diffusion/pipelines/pipeline_hunyuan_video.py" = ["E741"]

[tool.yapf]
column_limit = 80

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
line_length = 80
use_parentheses = true
skip_gitignore = true

[project.urls]

[tool.comfy]
PublisherId = "sgl-project"
DisplayName = "sgl-diffusion"
#Icon = "https://raw.githubusercontent.com/hao-ai-lab/fastvideo/main/comfyui/assets/icon_simple.svg"
