name: PR Test (sgl-kernel Blackwell)

on:
  push:
    branches: [main]
    paths:
      - "python/sglang/srt/**"
      - "sgl-kernel/**"
      - ".github/workflows/pr-test-sgl-kernel-blackwell.yml"
  pull_request:
    branches: [main]
    paths:
      - "python/sglang/srt/**"
      - "sgl-kernel/**"
      - ".github/workflows/pr-test-sgl-kernel-blackwell.yml"
  workflow_dispatch:

concurrency:
  group: pr-test-sgl-kernel-blackwell-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check clang-format
        uses: DoozyX/clang-format-lint-action@v0.18.1
        with:
          source: sgl-kernel
          extensions: h,c,cpp,hpp,cu,cuh,cc
          clangFormatVersion: 18
          style: file

  build-wheels:
    if: github.repository == 'sgl-project/sglang' || github.event_name == 'pull_request'
    runs-on: sgl-kernel-build-node
    strategy:
      matrix:
        include:
          - python-version: "3.10"
            cuda-version: "12.9"
    name: Build Wheel (CUDA ${{ matrix.cuda-version }})
    steps:
      - name: Cleanup
        run: |
          sudo rm -rf $GITHUB_WORKSPACE/* || true

      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build wheel for Python ${{ matrix.python-version }} and CUDA ${{ matrix.cuda-version }}
        if: github.event_name != 'push' || (matrix.cuda-version != '11.8' && matrix.cuda-version != '12.9')
        run: |
          cd sgl-kernel
          chmod +x ./build.sh
          ./build.sh "${{ matrix.python-version }}" "${{ matrix.cuda-version }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheel-python${{ matrix.python-version }}-cuda${{ matrix.cuda-version }}
          path: sgl-kernel/dist/*

  sgl-kernel-b200-test:
    if: github.repository == 'sgl-project/sglang' || github.event_name == 'pull_request'
    needs: build-wheels
    runs-on: b200-runner
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: sgl-kernel/dist/
          merge-multiple: true
          pattern: wheel-python3.10-cuda12.9

      - name: Install
        run: |
          IS_BLACKWELL=1 bash scripts/ci/ci_install_dependency.sh
          PIP_SUFFIX="--break-system-packages"
          pip uninstall sgl-kernel -y $PIP_SUFFIX || true
          pip uninstall ~gl-kernel -y $PIP_SUFFIX || true
          pip install torch==2.8.0 torchvision torchaudio --index-url https://download.pytorch.org/whl/test/cu129 $PIP_SUFFIX
          pip install pytest $PIP_SUFFIX
          pip install sgl-kernel/dist/*whl --force-reinstall --no-deps $PIP_SUFFIX
          pip list | grep sgl-kernel
          python3 -c "import sgl_kernel; print('sgl-kernel imported successfully')"

      - name: Run sgl-kernel Blackwell tests
        timeout-minutes: 60
        run: |
          cd sgl-kernel
          pytest tests/test_fp4_gemm.py tests/test_fp4_quantize.py tests/test_moe_fused_gate.py

      - name: Uninstall dependencies
        run: |
          pip uninstall sgl-kernel -y --break-system-packages || true

  finish:
    needs: [sgl-kernel-b200-test, lint, build-wheels]
    runs-on: ubuntu-latest
    steps:
      - name: Check all dependent job statuses
        run: |
          results=(${{ join(needs.*.result, ' ') }})
          for result in "${results[@]}"; do
            if [ "$result" = "failure" ] || [ "$result" = "cancelled" ]; then
              echo "Job failed with result: $result"
              exit 1
            fi
          done
          echo "All jobs completed successfully"
          exit 0
