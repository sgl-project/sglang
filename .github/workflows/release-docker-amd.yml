name: Release Docker Images (AMD)
on:
  push:
    branches:
      - main
    paths:
      - "python/sglang/version.py"
  workflow_dispatch:

jobs:
  publish:
    if: github.repository == 'sgl-project/sglang'
<<<<<<< HEAD
    runs-on: amd-docker
    environment: 'prod'
    strategy:
      matrix:
        rocm_version: ['6.3.0']
=======
    runs-on: amd-docker-scale
    environment: 'prod'
    strategy:
      matrix:
        gpu_arch: ['gfx942', 'gfx950']
>>>>>>> origin/main
        build_type: ['all', 'srt']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

<<<<<<< HEAD
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          docker-images: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: false

=======
>>>>>>> origin/main
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        run: |
          version=$(cat python/sglang/version.py | cut -d'"' -f2)

<<<<<<< HEAD
          if [ "${{ matrix.rocm_version }}" = "6.3.0" ]; then
            rocm_tag="rocm630"
          else
            echo "Unsupported ROCm version"
=======
          if [ "${{ matrix.gpu_arch }}" = "gfx942" ]; then
            rocm_tag="rocm630-mi30x"
          elif [ "${{ matrix.gpu_arch }}" = "gfx950" ]; then
            rocm_tag="rocm700-mi35x"
          else
            echo "Unsupported gfx arch"
>>>>>>> origin/main
            exit 1
          fi

          tag=v${version}-${rocm_tag}

          if [ "${{ matrix.build_type }}" = "all" ]; then
            tag_suffix=""
          elif [ "${{ matrix.build_type }}" = "srt" ]; then
            tag_suffix="-srt"
          else
            echo "Unsupported build type"
            exit 1
          fi

<<<<<<< HEAD
          docker build . -f docker/Dockerfile.rocm --build-arg BUILD_TYPE=${{ matrix.build_type }} -t lmsysorg/sglang:${tag}${tag_suffix} --no-cache
=======
          docker build . -f docker/Dockerfile.rocm --build-arg BUILD_TYPE=${{ matrix.build_type }} --build-arg GPU_ARCH=${{ matrix.gpu_arch }} -t lmsysorg/sglang:${tag}${tag_suffix} --no-cache
>>>>>>> origin/main
          docker push lmsysorg/sglang:${tag}${tag_suffix}
