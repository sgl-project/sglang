name: CI Monitor

on:
  schedule:
    # Run every 6 hours at 00:00, 06:00, 12:00, 18:00 UTC
    - cron: '0 */6 * * *'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      limit:
        description: 'Number of CI runs to analyze'
        required: false
        default: '1000'
        type: string

concurrency:
  group: ci-monitor-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci-monitor:
    if: github.repository == 'sgl-project/sglang'|| github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests matplotlib pandas

      - name: Run CI Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT_FOR_NIGHTLY_CI }}
          PYTHONUNBUFFERED: 1
          PYTHONIOENCODING: utf-8
        run: |
          cd scripts/ci_monitor
          python ci_analyzer.py --token $GITHUB_TOKEN --limit ${{ github.event.inputs.limit || '1000' }} --output ci_analysis_$(date +%Y%m%d_%H%M%S).json

      - name: Run Performance Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT_FOR_NIGHTLY_CI }}
          PYTHONUNBUFFERED: 1
          PYTHONIOENCODING: utf-8
        run: |
          cd scripts/ci_monitor
          python ci_analyzer_perf.py --token $GITHUB_TOKEN --limit 500 --output-dir performance_tables_$(date +%Y%m%d_%H%M%S)

      - name: Create Performance Tables ZIP
        run: |
          cd scripts/ci_monitor
          # Create ZIP of performance_tables directory
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)

          if ls -d performance_tables_* 1> /dev/null 2>&1; then
            # Get the performance_tables directory name
            PERF_DIR=$(ls -d performance_tables_* | head -1)

            # Create ZIP file
            zip -r "performance_tables_${TIMESTAMP}.zip" "${PERF_DIR}"

            echo "Created ZIP: performance_tables_${TIMESTAMP}.zip"
            echo "ZIP contents:"
            unzip -l "performance_tables_${TIMESTAMP}.zip"

            # Move to root for upload
            mv "performance_tables_${TIMESTAMP}.zip" ../../
          else
            echo "No performance_tables directory found"
          fi

      - name: Upload Performance Tables
        uses: actions/upload-artifact@v4
        with:
          name: performance-tables-${{ github.run_number }}
          path: performance_tables_*.zip
          retention-days: 30

      - name: Upload CI Analysis Results
        uses: actions/upload-artifact@v4
        with:
          name: ci-analysis-results-${{ github.run_number }}
          path: scripts/ci_monitor/ci_analysis_*.json
          retention-days: 30
